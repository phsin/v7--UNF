// ГМ = Глобавльный Модуль 
//
// ===============================================================
//Авторы:
// Синявский Филипп fa@kb99.pro
// Евгений Морозов morozov@kb99.pro

Перем Компонента Экспорт;
Перем тзГруппыТоваров Экспорт;

Перем  _login, _password, _address, _service;


//Служебные функции
Функция Этот(Конт) 	Возврат Конт; КонецФункции
Функция Сам() 	Возврат Этот(Контекст); КонецФункции

Процедура СообщитьОбОшибке(Описание, ТекущийКонтекст="", НомерСтрокиОшибки="" ) Экспорт



	Попытка
		ИмяФайла = ТекущийКонтекст.ИмяФайла;
	Исключение
		Попытка
			ИмяФайла = ТекущийКонтекст.ПолучитьПуть();
		Исключение
			ИмяФайла = Этот(Контекст).ПолучитьПуть();
		КонецПопытки;
	КонецПопытки;

	Сообщить(Описание,"!");

	ЗаписьЖурналаРегистрации(Описание,,,ТекущийКонтекст);
	
	Попытка
		//отправим сообщение об ошибке И версии файла в bugtracker
		Компонента.SendError(Описание, ИмяФайла, НомерСтрокиОшибки);
	Исключение
		//Сообщить("Необходимо обновить dll","!");
	КонецПопытки;
	
	Если Вопрос("Продолжить?",4)=7 Тогда
	    СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры

Процедура  СообщитьИнфо(Описание, ВыбДокумент="", ИмиджМаркера="i") Экспорт

	Сообщить(""+ВыбДокумент+" "+Описание, ИмиджМаркера);
	ЗаписьЖурналаРегистрации(Описание,,,ВыбДокумент);
	
КонецПроцедуры

Процедура МП_ПоказатьОтвет(Ответ)
   	
	objDom=СоздатьОбъект("MSXML2.DOMDocument.6.0");
    objDom.loadXML(Ответ);

	Попытка
		Если ПустоеЗначение(Ответ)=0 Тогда
			Сообщить("Ответ = "+ objDom.text +" ","i");
		Иначе
			Сообщить("Ответ = "+ Ответ +" ","!");
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура ИнициализацияПодключения()

	//В идеале долно быть 1 подключение к Ветису	
	ИмяDLL = "SoapDLL_test";
	Попытка
		ПодключитьВнешнююКомпоненту("AddIn."+ИмяDLL);
		Компонента = СоздатьОбъект("AddIn."+ИмяDLL);
	Исключение
		ошибка = "Компонента [AddIn."+ИмяDLL+"] не зарегистрирована ";
		Сообщить(ошибка,"!");
		СообщитьОбОшибке(Ошибка + ОписаниеОшибки(), Сам(), "НомерСтрокиМдуля(154)"); Возврат;
	КонецПопытки;

КонецПроцедуры

//{ =================== Добавление в ЛОГ ================================
// 
Функция Старт(Конт="") Экспорт
	
    tt1=_GetPerformanceCounter(); 
	Сообщить("Начало: "+ ТекущееВремя());
	Возврат tt1; 
	
КонецФункции       

// Внимание! разделитель изменен с ":" на "="
Функция Финиш(ВремяНачала, Конт, Имя="", Док="", ТипСобытия="ВнешняяОбработка", ДопИнфо="") Экспорт
        
 	Попытка 
 		Путь = Конт.РасположениеФайла();
   	Исключение
	   	Попытка
	 		// класс
	   		Путь = Конт.ПолучитьПуть();  
	   	Исключение   
			ФормаРасш = СоздатьОбъект("РасширениеФормы");
			Попытка 
				ФормаРасш.УстановитьФорму( Конт );
		 		Путь = ФормаРасш.ПолныйТипОбъекта();  		 		
		 	Исключение
		 		Путь = "Модуль";
		 	КонецПопытки;	   		
	   	КонецПопытки;
	КонецПопытки;                
	
    Время= _GetPerformanceCounter() - ВремяНачала;  
	//Сообщение = "Путь="+Путь+" ВремяВыполнения="+Время;
	Сообщение = " ВремяВыполнения="+Время;
	
	Попытка 
		Сообщение = Сообщение + " Вид="+Конт.Вид();
	Исключение
	КонецПопытки;
	
	//Если ПустоеЗначение(Имя)=0 Тогда 
	//	Сообщение = Сообщение +" Имя="+Имя;
	//КонецЕсли;
	
	Сообщение = Сообщение + " "+ДопИнфо;
	
	ЗаписьЖурналаРегистрации(Сообщение, ТипСобытия, , Док, 3);
	Сообщить(Сообщение);
	Возврат Время; 
	
КонецФункции  
//}

// Дата в XML
Функция Преобразовать_Дата_в_Строка(ВыбДата, Время="", УказыватьТекущееВремя=0) Экспорт
	стрДата = ""+ДатаГод(ВыбДата)+"-";
	Если ДатаМесяц(ВыбДата)<10 Тогда
		стрДата=стрДата+"0"+ДатаМесяц(ВыбДата)+"-";
	Иначе
		стрДата=стрДата + ДатаМесяц(ВыбДата) + "-";
	КонецЕсли;
	Если ДатаЧисло(ВыбДата)<10 Тогда
		стрДата=стрДата + "0" + ДатаЧисло(ВыбДата);
	Иначе
		стрДата=стрДата + ДатаЧисло(ВыбДата);
	КонецЕсли;

	Если УказыватьТекущееВремя=1 Тогда
		ч=0; м=0; с=0;
		ТекущееВремя(ч,м,с);
		Время = "T"+Формат(ч,"Ч(0)2.0")+":"+Формат(м,"Ч(0)2.0")+":"+Формат(с,"Ч(0)2.0");
	КонецЕсли;
		
	Если ТипЗначенияСтр(Время)="Число" Тогда 
		Время = "T"+Формат(Время,"Ч(0)2.0")+":"+"00:00";
	КонецЕсли;
	
	стрДата=стрДата+Время;

	Возврат стрДата;
КонецФункции

// Булево в XML
Функция булево(знЧисло) Экспорт

	Если знЧисло=0 Тогда
		Возврат "false";
	Иначе
		Возврат "true";
	КонецЕсли;
КонецФункции

Функция Пауза(СвоеЗначение=0) Экспорт

    //стандартное поведение функции
    Если СвоеЗначение = 0 Тогда
        ЗадержкаСекунд = 5;
    Иначе
        ЗадержкаСекунд = СвоеЗначение; //[+]serpent, 29.08.2019
    КонецЕсли;

    Состояние("Пауза "+ЗадержкаСекунд+" сек");

    //стандартное поведение функции
    Компонента.Pause(ЗадержкаСекунд*1000); // в ms
	
КонецФункции

Функция ПолучитьИНН(ВыбКлиент) Экспорт

	Если ПустоеЗначение( ВыбКлиент )=1 Тогда
		Возврат "";
	КонецЕсли;
	
	//стандартное поведение функции
	Попытка
		ИННКПП = ВыбКлиент.ЮрФизЛицо.ИНН;
	Исключение
		ИННКПП = "";
	КонецПопытки;

	Если Найти(ИННКПП, "\") <> 0 Тогда
		// найден разделитель
		Возврат Лев(ИННКПП, Найти(ИННКПП, "\") - 1);

	ИначеЕсли Найти(ИННКПП, "/") <> 0 Тогда
		// найден разделитель
		Возврат Лев(ИННКПП, Найти(ИННКПП, "/") - 1);
	Иначе
		Возврат СокрЛП(ИННКПП);
	КонецЕсли;
	
КонецФункции // ПолучитьИНН()

Процедура Инициализация() Экспорт
	
	ИнициализацияПодключения();
				
КонецПроцедуры // Инициализация

Функция Отгрузка_Запрос_XML( ВыбДок, СФ )

  Запрос = "<?xml version='1.0' encoding='windows-1251'?>
  |<ДокументРеализация 
  |xmlns='kb99_77' 
  |xmlns:xs='http://www.w3.org/2001/XMLSchema' 
  |xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' 
  |КонтрагентНаименование='"+ВыбДок.Контрагент.Наименование+"' 
  |НомерДок='"+ВыбДок.НомерДок+"'
  |НДСВключатьВСтоимость='"+ ВыбДок.СуммаВклНДС +"'
  |НалогообложениеНДС='"+ ВыбДок.УчитыватьНДС +"'
  |ДатаДок='"+ Преобразовать_Дата_в_Строка(ВыбДок.ДатаДок) +"' 
  |КонтрагентИнн='"+ ПолучитьИНН(ВыбДок.Контрагент)+"'
  |КонтрагентКод='"+ ВыбДок.Контрагент.Код+"'";
  Если ПустоеЗначение(СФ)=0 Тогда
  	Запрос = Запрос + "
  	|ТребуетсяСФ = 'true'
  	|НомерСФ = '"+СФ.НомерДок+"'
  	|ДатаСФ = '"+Преобразовать_Дата_в_Строка(СФ.ДатаДок)+"'";
  Иначе
  	 Запрос = Запрос + "
  	|ТребуетсяСФ = 'false'";
  КонецЕсли;
  
  Если ПустоеЗначение(ВыбДок.Грузополучатель)=0 Тогда
  	Запрос = Запрос + "
  	|ГрузополучательКод='"+ВыбДок.Грузополучатель.Код+"'
  	|ГрузополучательНаименование='"+ВыбДок.Грузополучатель.Наименование+"'
  	|ГрузополучательИнн='"+ПолучитьИНН(ВыбДок.Грузополучатель)+"'>
  	|  <тчТовары> ";
  Иначе
  	Запрос = Запрос + "
  	|ГрузополучательКод='"+ВыбДок.Контрагент.Код+"'
  	|ГрузополучательНаименование='"+ВыбДок.Контрагент.Наименование+"'
  	|ГрузополучательИнн='"+ПолучитьИНН(ВыбДок.Контрагент)+"'>
  	|  <тчТовары> ";
  КонецЕсли;
  
  ВыбДок.ВыбратьСтроки();
  Пока ВыбДок.ПолучитьСтроку() = 1 Цикл
    Запрос = Запрос + "
    |    <Строки xsi:type='ДокументРеализацияТовары' 
    |НоменклатураНаименование='"+ВыбДок.Номенклатура.Наименование+"' 
	|НоменклатураКод='"+ВыбДок.Номенклатура.Код+"'
    |Количество='"+ВыбДок.Количество+"' 
    |Цена='"+ВыбДок.Цена+"' 
    |Сумма='"+ВыбДок.Сумма+"' 
    |СтавкаНДС='"+ ВыбДок.СтавкаНДС +"'
	|СуммаНДС='"+ ВыбДок.СуммаНДС +"' 
    |ЕдиницаИзмеренияКодОКЕИ='"+ВыбДок.Единица.ОКЕИ.Код+"'     
    |/>";

  КонецЦикла;
  Запрос = Запрос + "
  |  </тчТовары>
  |</ДокументРеализация>
  |";
  Возврат Запрос;
  
КонецФункции

Функция ОтправитьВ_УНФ( ВыбДок ) Экспорт
	
	Попытка Инициализация(); Исключение КонецПопытки;	
	
	ВидСчетаФактуры	= "СчетФактураВыданный";
	СФ = глНайтиСчетФактуру(ВыбДок, ВидСчетаФактуры);
	
	//_login = ПолучитьКонстанту("mobile_login");
	//_password = ПолучитьКонстанту("mobile_password");
	//_service = ПолучитьКонстанту("mobile_service");
	//_address = ПолучитьКонстанту("mobile_url");
	
	Если ПустоеЗначение(_address)=1 Тогда 
		СообщитьОбОшибке("Не заполнен параметр [адрес сервера мобильного приложения]");
		Возврат "";
	КонецЕсли;
	Если ПустоеЗначение(_service)=1 Тогда 
		СообщитьОбОшибке("Не заполнен параметр [сервис мобильного приложения]");
		Возврат "";
	КонецЕсли;
	
	СообщитьИнфо("Отправка документа: "+_address+_service+"["+_login+":"+_password+"]");
	
	ЗапросXML = Отгрузка_Запрос_XML( ВыбДок, СФ );

	Опции = Компонента.GetOptions();

	Опции.USERNAME 			= СокрЛП(_login);
    Опции.PASSWORD 			= СокрЛП(_password) ;
    Опции.ISSUER_ID 		= "1";// ПолучитьКонстанту("param_issuer_id");
    Опции.SERVICE_ID 		= "";
    Опции.API_KEY 			= "1";// ПолучитьКонстанту("param_api_key");
    Опции.INITIATOR_LOGIN 	= "";
    Опции.VETDOCTOR_LOGIN 	= "";
	Опции.LogsDir 			= КаталогИБ()+"kb99\logs\";// ПолучитьКонстанту("КаталогЛогов");
	Опции.VETDOCTOR_FIO 	= "";
	Опции.VETDOCTOR_POST 	= "";
	Опции.DEBUG 			= Компонента.TRUE();

	метод = Компонента.GetMethod();
    метод.Service = СокрЛП(_Service);
    метод.Action = "kb99_77#kb99_77:ReceiveDoc77";

	appID = Компонента.GUID();
	Ответ = Компонента.SendRequestv8( _address, ЗапросXML, Опции, метод, appID);		
	
	Сообщить("Получен " + Компонента.LogFilename);
	МП_ПоказатьОтвет( Ответ );
	
КонецФункции

//}#######################################################################################

_login = "service"; 					// имя пользователя, от имени которого будет выполнятся подключение к 1с
_password = "1234"; 					// пароль пользователя
_service = "unf_demo/ws/kb99_Shipment"; // путь к расширению 
_address = "http://192.168.54.133/"; 	// адрес к конфигурации, опубликованной на web сервере
